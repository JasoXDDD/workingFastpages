<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://nighthawkcoders.github.io/APCSP/feed.xml" rel="self" type="application/atom+xml" /><link href="https://nighthawkcoders.github.io/APCSP/" rel="alternate" type="text/html" /><updated>2023-06-08T03:57:07-05:00</updated><id>https://nighthawkcoders.github.io/APCSP/feed.xml</id><title type="html">APCSP</title><subtitle>AP Computer Science Principles course materials.</subtitle><entry><title type="html">Javascript Snippets</title><link href="https://nighthawkcoders.github.io/APCSP/javascriptTicket" rel="alternate" type="text/html" title="Javascript Snippets" /><published>2023-05-29T00:00:00-05:00</published><updated>2023-05-29T00:00:00-05:00</updated><id>https://nighthawkcoders.github.io/APCSP/javascript-snippets</id><author><name></name></author><summary type="html"><![CDATA[Table Time: 30.00 Name: Score: 0 Submit Name Score Retry for (var i = 0; i &lt; n1; i++) L[i] = arr[l + i]; for (var j = 0; j &lt; n2; j++) R[j] = arr[m + 1 + j]; var i = 0; var j = 0; var k = l; while (i &lt; n1 &amp;&amp; j &lt; n2) { if (L[i]["score"] &lt;= R[j]["score"]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } while (i &lt; n1) { arr[k] = L[i]; i++; k++; } while (j &lt; n2) { arr[k] = R[j]; j++; k++; } }]]></summary></entry></feed>